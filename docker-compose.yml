version: '2'
volumes:
  db:
  aida-db:
  node_modules:
  flow-typed:
  deps:
  build:
  mix:

services:
  db:
    image: postgres:9.5
    environment:
      POSTGRES_PASSWORD:
      POSTGRES_USER: postgres
      POSTGRES_DB: active_monitoring_dev
    volumes:
      - 'db:/var/lib/postgresql/data'

  app:
    command: /bin/sh -c 'mix ecto.migrate && mix phx.server'
    build:
      context: ./
      dockerfile: Dockerfile.dev
    working_dir: /app
    depends_on:
      - db
      - aida-backend
    volumes:
      - './:/app'
      - 'deps:/app/deps'
      - 'mix:/root/.mix'
      - 'build:/app/_build'
    environment:
      AIDA_BACKEND_URL: http://aida-backend
      DATABASE_HOST: db
      HTTP_PORT: 80
      TERM: xterm
      INTERCOM_APP_ID: 
    ports:
      - 4000:80

  webpack:
    build:
      context: ./
      dockerfile: Dockerfile.webpack
    command: /bin/sh -c 'yarn install && yarn run watch'
    restart: always
    working_dir: /app
    stop_signal: SIGKILL
    volumes:
      - './:/app'
      - 'deps:/app/deps'
      - 'flow-typed:/app/flow-typed'
      - 'node_modules:/app/node_modules'

  ngrok:
    image: wernight/ngrok
    ports:
      - 4040:4040
    environment:
      NGROK_PORT: 'app:80'

  aida-db:
    image: postgres:9.6
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD:
    volumes:
      - aida-db:/var/lib/postgresql/data

  aida-backend:
    image: instedd/aida:dev
    ports:
      - "4080:80"
    depends_on:
      - aida-db
    environment:
      DATABASE_URL: ecto://root:@aida-db/aida-backend
    command: /bin/sh -c 'mix ecto.migrate && mix phx.server'
